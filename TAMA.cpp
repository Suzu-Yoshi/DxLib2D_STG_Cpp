/*--+----1----+----2----+----3----+----4----+----5-----+----6----+----7----+----8----+----9----+---*/
/* TAMA.cpp     																				   */
/* TAMAクラス																					   */

//########## ヘッダーファイル読み込み ##########
#include "TAMA.hpp"

//########## クラスの定義 ##########

//コンストラクタ
TAMA::TAMA()
{
	this->SetAnime(MY_ANIME_DIR_TAMA, MY_ANIME_NAME_TAMA_AKA, 4, 4, 1, TAMA_WIDTH, TAMA_HEIGHT, TAMA_DRAW_SPEED);

	this->SetInitInfo(0, 0, 0, 0, 0);	//初期設定

	return;
}


//コンストラクタ
TAMA::TAMA(int Number)
{
	this->SetAnime(MY_ANIME_DIR_TAMA, MY_ANIME_NAME_TAMA_AKA, 4, 4, 1, TAMA_WIDTH, TAMA_HEIGHT, TAMA_DRAW_SPEED);

	this->SetInitInfo(
		0,
		GAME_HEIGHT / 2 - this->Anime->GetHeight() / 2,
		this->Anime->GetWidth(),
		this->Anime->GetHeight(),
		Number);	//初期設定

	return;
}

//初期設定
void TAMA::SetInitInfo(int left, int top, int width, int height, int Number)
{
	this->SetSpeed(TAMA_MOVE_SPEED_SLOW);	//速さを設定

	this->sikaku_draw = new SIKAKU();		//四角クラス作成
	this->sikaku_draw->SetValue(left, top, width, height);	//描画位置を設定

	this->collision = new COLLISION();		//当たり判定を作成
	this->collision->SetSikaku(left, top, width, height);	//当たり判定の領域を設定
	this->collision->SetIsDraw(true);		//当たり判定の範囲を描画する

	this->SetNo(Number);	//番号を設定
	this->IsEnbled = true;	//弾を有効化

	return;
}

//弾のアニメーションを作成
void TAMA::SetAnime(const char *dir, const char *path, int SplitNumALL, int SpritNumX, int SplitNumY, int SplitWidth, int SplitHeight, double changeSpeed)
{
	this->Anime = new ANIMATION(
		dir,
		path,
		SplitNumALL,
		SpritNumX,
		SplitNumY,
		SplitWidth,
		SplitHeight,
		changeSpeed,
		true);	//弾を生成

	return;
}

//デストラクタ
TAMA::~TAMA()
{
	if (!this->Anime)	//emplace_backで呼ばれるときの対処
	{
		delete this->Anime;
	}

	return;
}

//弾を有効/無効にする
void TAMA::SetIsEnbled(bool set)
{
	this->IsEnbled = set; return;
}

//Noを取得
int  TAMA::GetNo(void)
{
	return this->No;
}

//Noを設定
void TAMA::SetNo(int Number)
{
	this->No = Number;
	return;
}

//速さを設定
void TAMA::SetSpeed(int sp)
{
	this->Speed = sp;
	return;
}

//速さを取得
int TAMA::GetSpeed(void)
{
	return this->Speed;
}

//弾を移動
void TAMA::moveTama(void)
{
	this->sikaku_draw->Left += this->Speed;	//画像の位置を移動

	this->collision->SetSikaku(
		this->sikaku_draw->Left,
		this->sikaku_draw->Top,
		this->sikaku_draw->Width,
		this->sikaku_draw->Height
	);	//当たり判定を更新

	return;
}

//操作
bool TAMA::Operation(void)
{
	//弾が画面の中なら・・・
	if (this->sikaku_draw->Left >= 0 && this->sikaku_draw->Right <= GAME_WIDTH &&
		this->sikaku_draw->Top >= 0 && this->sikaku_draw->Bottom <= GAME_HEIGHT)
	{
		return true;	//弾の操作を継続
	}

	//弾が画面の外なら・・・
	return false;		//弾の操作終了
}

//画像を描画
void TAMA::Draw(void)
{
	if (this->IsEnbled == true)	//描画して良いなら
	{
		this->Anime->Draw(this->sikaku_draw->Left, this->sikaku_draw->Top);
		this->collision->Draw();
	}
}